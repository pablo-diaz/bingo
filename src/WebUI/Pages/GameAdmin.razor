@page "/admin"

@using WebUI.ViewModels
@using WebUI.Components

@inject GameAdmonViewModel admon

<h1>Administración de Juegos</h1>

@if (admon.CanLandingBeShown)
{
    <button class="btn btn-primary" @onclick=admon.TransitionToNewGame>Crear nuevo juego</button>
    <button class="btn btn-warning" @onclick=admon.AddTestGames>Agregar juegos de prueba</button>
    <table class="table">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Jugadores</th>
                <th>Estado</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var game in admon.Games)
            {
                <tr>
                    <td><button type="button" class="btn btn-link" @onclick=@(() => admon.TransitionToEditGame(game))>@game.Name</button></td>
                    <td>@game.PlayerCount</td>
                    <td>@game.State</td>
                </tr>
            }
        </tbody>
    </table>
}

@if (admon.CanNewGameSectionBeShown)
{
    <EditForm Model=admon.GameModel OnValidSubmit=admon.CreateNewGame>
        <DataAnnotationsValidator />
        <div class="form-row">
            <div class="col">
                <label for=@admon.GameModel.Name>Nombre del Juego</label>
                <InputText type="text" class="form-control" placeholder="Escriba un nombre del juego" @bind-Value=admon.GameModel.Name />
                <ValidationMessage For="@(() => admon.GameModel.Name)" />
            </div>
        </div>
        <button type="reset" class="btn btn-secondary" @onclick=admon.CancelCreatingNewGame>Cancelar</button>
        <button type="submit" class="btn btn-primary">Crear juego</button>
    </EditForm>
}

@if (admon.CanEditGameSectionBeShown)
{
    <h2>Juego: @admon.GameModel.Name <span class="badge badge-info">@admon.GameModel.State</span></h2>
    <button class="btn btn-outline-info" @onclick=admon.TransitionToBrowsing>Regresar a listado de juegos</button>
    <button class="btn btn-primary" @onclick=admon.TransitionToNewPlayer style=@(admon.GameModel.IsItADraftGame ? "" : "display: none;")>Crear nuevo jugador</button>
    <button class="btn btn-warning" @onclick=admon.AddTestPlayers style=@(admon.GameModel.IsItADraftGame ? "" : "display: none;")>Agregar jugadores de prueba</button>
    <button class="btn btn-success" @onclick=admon.StartGame style=@(admon.GameModel.IsItADraftGame ? "" : "display: none;")>Iniciar juego</button>

    <Players List=@admon.GameModel.Players AllowAddingBoards=@admon.GameModel.IsItADraftGame OnAddingBoard=@admon.AddBoardToPlayer />
    <MasterBoard CanItBeShown=@(!admon.GameModel.IsItADraftGame) State=@admon.GameModel.MasterBoard OnBallClick=@(ball => { admon.PlayBall(ball); UpdateUI(); }) />
}

@if (admon.CanNewPlayerSectionBeShown)
{
    <EditForm Model=admon.PlayerModel OnValidSubmit=admon.CreateNewPlayer>
        <DataAnnotationsValidator />
        <div class="form-row">
            <div class="col">
                <label for=@admon.PlayerModel.Name>Nombre del Jugador</label>
                <InputText type="text" class="form-control" placeholder="Escriba un nombre del jugador" @bind-Value=admon.PlayerModel.Name />
                <ValidationMessage For="@(() => admon.PlayerModel.Name)" />
            </div>
        </div>
        <div class="form-row">
            <div class="col">
                <label for=@admon.PlayerModel.Login>Login del Jugador</label>
                <InputText type="text" class="form-control" placeholder="Escriba un login para el jugador" @bind-Value=admon.PlayerModel.Login />
                <ValidationMessage For="@(() => admon.PlayerModel.Login)" />
            </div>
            <div class="col">
                <label for=@admon.PlayerModel.Password>Contraseña del Jugador</label>
                <InputText type="text" class="form-control" placeholder="Escriba una contraseña para el jugador" @bind-Value=admon.PlayerModel.Password />
                <ValidationMessage For="@(() => admon.PlayerModel.Password)" />
            </div>
        </div>
        <button type="reset" class="btn btn-secondary" @onclick=admon.CancelCreatingNewPlayer>Cancelar</button>
        <button type="submit" class="btn btn-primary">Crear jugador</button>
    </EditForm>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        await admon.InitializeComponent();
    }

    private void UpdateUI()
    {
        StateHasChanged();
    }
}
