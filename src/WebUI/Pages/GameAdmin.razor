@page "/admin"

@using WebUI.ViewModels

@inject GameAdmonViewModel admon

<h1>Administración de Juegos</h1>

@if (admon.CanLandingBeShown)
{
    <button class="btn btn-primary" @onclick=admon.TransitionToNewGame>Crear nuevo juego</button>
    <table class="table">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Jugadores</th>
                <th>Estado</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var game in admon.Games)
            {
                <tr>
                    <td><button type="button" class="btn btn-link" @onclick=@(() => admon.TransitionToEditGame(game))>@game.Name</button></td>
                    <td>@game.PlayerCount</td>
                    <td>@game.State</td>
                </tr>
            }
        </tbody>
    </table>
}

@if (admon.CanNewGameSectionBeShown)
{
    <EditForm Model=admon.GameModel OnValidSubmit=admon.CreateNewGame>
        <DataAnnotationsValidator />
        <div class="form-row">
            <div class="col">
                <label for=@admon.GameModel.Name>Nombre del Juego</label>
                <InputText type="text" class="form-control" placeholder="Escriba un nombre del juego" @bind-Value=admon.GameModel.Name />
                <ValidationMessage For="@(() => admon.GameModel.Name)" />
            </div>
        </div>
        <button type="reset" class="btn btn-secondary" @onclick=admon.CancelCreatingNewGame>Cancelar</button>
        <button type="submit" class="btn btn-primary">Crear juego</button>
    </EditForm>
}

@if (admon.CanEditGameSectionBeShown)
{
    <h2>Juego: @admon.GameModel.Name <span class="badge badge-info">@admon.GameModel.State</span></h2>
    <button class="btn btn-outline-info" @onclick=admon.TransitionToBrowsing>Regresar a listado de juegos</button>
    @if(admon.GameModel.CanStartButtonBeShown)
    {
        <button class="btn btn-primary" @onclick=admon.TransitionToNewPlayer>Crear nuevo jugador</button>
        <button class="btn btn-success" @onclick=admon.StartGame>Iniciar juego</button>
    }

    @foreach (var player in admon.GameModel.Players)
    {
        <div class="card" style="width: 18rem;">
            <div class="card-body">
                <h5 class="card-title">@player.Name</h5>
                <h6 class="card-subtitle mb-2 text-muted">Login: @player.Login</h6>
                <h6 class="card-subtitle mb-2 text-muted">Contraseña: @player.Password</h6>
                <h6 class="card-subtitle mb-2 text-muted"><span class="badge badge-info">@player.BoardsCount tableros</span></h6>
                <!-- <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p> -->
                <button class="btn btn-primary" @onclick=@(() => admon.AddBoardToPlayer(player))>Agregar 1 Tabla</button>
            </div>
        </div>
    }
}

@if (admon.CanNewPlayerSectionBeShown)
{
    <EditForm Model=admon.PlayerModel OnValidSubmit=admon.CreateNewPlayer>
        <DataAnnotationsValidator />
        <div class="form-row">
            <div class="col">
                <label for=@admon.PlayerModel.Name>Nombre del Jugador</label>
                <InputText type="text" class="form-control" placeholder="Escriba un nombre del jugador" @bind-Value=admon.PlayerModel.Name />
                <ValidationMessage For="@(() => admon.PlayerModel.Name)" />
            </div>
        </div>
        <div class="form-row">
            <div class="col">
                <label for=@admon.PlayerModel.Login>Login del Jugador</label>
                <InputText type="text" class="form-control" placeholder="Escriba un login para el jugador" @bind-Value=admon.PlayerModel.Login />
                <ValidationMessage For="@(() => admon.PlayerModel.Login)" />
            </div>
            <div class="col">
                <label for=@admon.PlayerModel.Password>Contraseña del Jugador</label>
                <InputText type="text" class="form-control" placeholder="Escriba una contraseña para el jugador" @bind-Value=admon.PlayerModel.Password />
                <ValidationMessage For="@(() => admon.PlayerModel.Password)" />
            </div>
        </div>
        <button type="reset" class="btn btn-secondary" @onclick=admon.CancelCreatingNewPlayer>Cancelar</button>
        <button type="submit" class="btn btn-primary">Crear jugador</button>
    </EditForm>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        await admon.InitializeComponent();
    }
}
